{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClusteredYamap = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar react_native_1 = require(\"react-native-web/dist/index\");\nvar resolveAssetSource_1 = __importDefault(require(\"react-native/Libraries/Image/resolveAssetSource\"));\nvar CallbacksManager_1 = __importDefault(require(\"../utils/CallbacksManager\"));\nvar interfaces_1 = require(\"../interfaces\");\nvar utils_1 = require(\"../utils\");\nvar Yamap_1 = require(\"./Yamap\");\nvar NativeYamapModule = react_native_1.NativeModules.yamap;\nvar YaMapNativeComponent = react_native_1.requireNativeComponent('ClusteredYamapView');\nvar ClusteredYamap = function (_super) {\n  __extends(ClusteredYamap, _super);\n  function ClusteredYamap() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.map = react_1.default.createRef();\n    return _this;\n  }\n  ClusteredYamap.init = function (apiKey) {\n    return NativeYamapModule.init(apiKey);\n  };\n  ClusteredYamap.setLocale = function (locale) {\n    return new Promise(function (resolve, reject) {\n      NativeYamapModule.setLocale(locale, function () {\n        return resolve();\n      }, function (err) {\n        return reject(new Error(err));\n      });\n    });\n  };\n  ClusteredYamap.getLocale = function () {\n    return new Promise(function (resolve, reject) {\n      NativeYamapModule.getLocale(function (locale) {\n        return resolve(locale);\n      }, function (err) {\n        return reject(new Error(err));\n      });\n    });\n  };\n  ClusteredYamap.resetLocale = function () {\n    return new Promise(function (resolve, reject) {\n      NativeYamapModule.resetLocale(function () {\n        return resolve();\n      }, function (err) {\n        return reject(new Error(err));\n      });\n    });\n  };\n  ClusteredYamap.prototype.findRoutes = function (points, vehicles, callback) {\n    this._findRoutes(points, vehicles, callback);\n  };\n  ClusteredYamap.prototype.findMasstransitRoutes = function (points, callback) {\n    this._findRoutes(points, Yamap_1.YaMap.ALL_MASSTRANSIT_VEHICLES, callback);\n  };\n  ClusteredYamap.prototype.findPedestrianRoutes = function (points, callback) {\n    this._findRoutes(points, [], callback);\n  };\n  ClusteredYamap.prototype.findDrivingRoutes = function (points, callback) {\n    this._findRoutes(points, ['car'], callback);\n  };\n  ClusteredYamap.prototype.fitAllMarkers = function () {\n    react_native_1.UIManager.dispatchViewManagerCommand(react_native_1.findNodeHandle(this), this.getCommand('fitAllMarkers'), []);\n  };\n  ClusteredYamap.prototype.setTrafficVisible = function (isVisible) {\n    react_native_1.UIManager.dispatchViewManagerCommand(react_native_1.findNodeHandle(this), this.getCommand('setTrafficVisible'), [isVisible]);\n  };\n  ClusteredYamap.prototype.fitMarkers = function (points) {\n    react_native_1.UIManager.dispatchViewManagerCommand(react_native_1.findNodeHandle(this), this.getCommand('fitMarkers'), [points]);\n  };\n  ClusteredYamap.prototype.setCenter = function (center, zoom, azimuth, tilt, duration, animation) {\n    if (zoom === void 0) {\n      zoom = center.zoom || 10;\n    }\n    if (azimuth === void 0) {\n      azimuth = 0;\n    }\n    if (tilt === void 0) {\n      tilt = 0;\n    }\n    if (duration === void 0) {\n      duration = 0;\n    }\n    if (animation === void 0) {\n      animation = interfaces_1.Animation.SMOOTH;\n    }\n    react_native_1.UIManager.dispatchViewManagerCommand(react_native_1.findNodeHandle(this), this.getCommand('setCenter'), [center, zoom, azimuth, tilt, duration, animation]);\n  };\n  ClusteredYamap.prototype.setZoom = function (zoom, duration, animation) {\n    if (duration === void 0) {\n      duration = 0;\n    }\n    if (animation === void 0) {\n      animation = interfaces_1.Animation.SMOOTH;\n    }\n    react_native_1.UIManager.dispatchViewManagerCommand(react_native_1.findNodeHandle(this), this.getCommand('setZoom'), [zoom, duration, animation]);\n  };\n  ClusteredYamap.prototype.getCameraPosition = function (callback) {\n    var cbId = CallbacksManager_1.default.addCallback(callback);\n    react_native_1.UIManager.dispatchViewManagerCommand(react_native_1.findNodeHandle(this), this.getCommand('getCameraPosition'), [cbId]);\n  };\n  ClusteredYamap.prototype.getVisibleRegion = function (callback) {\n    var cbId = CallbacksManager_1.default.addCallback(callback);\n    react_native_1.UIManager.dispatchViewManagerCommand(react_native_1.findNodeHandle(this), this.getCommand('getVisibleRegion'), [cbId]);\n  };\n  ClusteredYamap.prototype.getScreenPoints = function (points, callback) {\n    var cbId = CallbacksManager_1.default.addCallback(callback);\n    react_native_1.UIManager.dispatchViewManagerCommand(react_native_1.findNodeHandle(this), this.getCommand('getScreenPoints'), [points, cbId]);\n  };\n  ClusteredYamap.prototype.getWorldPoints = function (points, callback) {\n    var cbId = CallbacksManager_1.default.addCallback(callback);\n    react_native_1.UIManager.dispatchViewManagerCommand(react_native_1.findNodeHandle(this), this.getCommand('getWorldPoints'), [points, cbId]);\n  };\n  ClusteredYamap.prototype._findRoutes = function (points, vehicles, callback) {\n    var cbId = CallbacksManager_1.default.addCallback(callback);\n    var args = react_native_1.Platform.OS === 'ios' ? [{\n      points: points,\n      vehicles: vehicles,\n      id: cbId\n    }] : [points, vehicles, cbId];\n    react_native_1.UIManager.dispatchViewManagerCommand(react_native_1.findNodeHandle(this), this.getCommand('findRoutes'), args);\n  };\n  ClusteredYamap.prototype.getCommand = function (cmd) {\n    return react_native_1.Platform.OS === 'ios' ? react_native_1.UIManager.getViewManagerConfig('ClusteredYamapView').Commands[cmd] : cmd;\n  };\n  ClusteredYamap.prototype.processRoute = function (event) {\n    var _a = event.nativeEvent,\n      id = _a.id,\n      routes = __rest(_a, [\"id\"]);\n    CallbacksManager_1.default.call(id, routes);\n  };\n  ClusteredYamap.prototype.processCameraPosition = function (event) {\n    var _a = event.nativeEvent,\n      id = _a.id,\n      point = __rest(_a, [\"id\"]);\n    CallbacksManager_1.default.call(id, point);\n  };\n  ClusteredYamap.prototype.processVisibleRegion = function (event) {\n    var _a = event.nativeEvent,\n      id = _a.id,\n      visibleRegion = __rest(_a, [\"id\"]);\n    CallbacksManager_1.default.call(id, visibleRegion);\n  };\n  ClusteredYamap.prototype.processWorldToScreenPointsReceived = function (event) {\n    var _a = event.nativeEvent,\n      id = _a.id,\n      screenPoints = __rest(_a, [\"id\"]);\n    CallbacksManager_1.default.call(id, screenPoints);\n  };\n  ClusteredYamap.prototype.processScreenToWorldPointsReceived = function (event) {\n    var _a = event.nativeEvent,\n      id = _a.id,\n      worldPoints = __rest(_a, [\"id\"]);\n    CallbacksManager_1.default.call(id, worldPoints);\n  };\n  ClusteredYamap.prototype.resolveImageUri = function (img) {\n    return img ? resolveAssetSource_1.default(img).uri : '';\n  };\n  ClusteredYamap.prototype.getProps = function () {\n    var props = __assign(__assign({}, this.props), {\n      clusteredMarkers: this.props.clusteredMarkers.map(function (mark) {\n        return mark.point;\n      }),\n      children: this.props.clusteredMarkers.map(this.props.renderMarker),\n      onRouteFound: this.processRoute,\n      onCameraPositionReceived: this.processCameraPosition,\n      onVisibleRegionReceived: this.processVisibleRegion,\n      onWorldToScreenPointsReceived: this.processWorldToScreenPointsReceived,\n      onScreenToWorldPointsReceived: this.processScreenToWorldPointsReceived,\n      userLocationIcon: this.props.userLocationIcon ? this.resolveImageUri(this.props.userLocationIcon) : undefined\n    });\n    utils_1.processColorProps(props, 'clusterColor');\n    utils_1.processColorProps(props, 'userLocationAccuracyFillColor');\n    utils_1.processColorProps(props, 'userLocationAccuracyStrokeColor');\n    return props;\n  };\n  ClusteredYamap.prototype.render = function () {\n    return react_1.default.createElement(YaMapNativeComponent, __assign({}, this.getProps(), {\n      ref: this.map\n    }));\n  };\n  ClusteredYamap.defaultProps = {\n    showUserPosition: true,\n    clusterColor: 'red',\n    maxFps: 60\n  };\n  ClusteredYamap.ALL_MASSTRANSIT_VEHICLES = ['bus', 'trolleybus', 'tramway', 'minibus', 'suburban', 'underground', 'ferry', 'cable', 'funicular'];\n  return ClusteredYamap;\n}(react_1.default.Component);\nexports.ClusteredYamap = ClusteredYamap;","map":{"version":3,"names":["react_1","__importDefault","require","react_native_1","resolveAssetSource_1","CallbacksManager_1","interfaces_1","utils_1","Yamap_1","NativeYamapModule","NativeModules","yamap","YaMapNativeComponent","requireNativeComponent","ClusteredYamap","_super","__extends","_this","apply","arguments","map","default","createRef","init","apiKey","setLocale","locale","Promise","resolve","reject","err","Error","getLocale","resetLocale","prototype","findRoutes","points","vehicles","callback","_findRoutes","findMasstransitRoutes","YaMap","ALL_MASSTRANSIT_VEHICLES","findPedestrianRoutes","findDrivingRoutes","fitAllMarkers","UIManager","dispatchViewManagerCommand","findNodeHandle","getCommand","setTrafficVisible","isVisible","fitMarkers","setCenter","center","zoom","azimuth","tilt","duration","animation","Animation","SMOOTH","setZoom","getCameraPosition","cbId","addCallback","getVisibleRegion","getScreenPoints","getWorldPoints","args","Platform","OS","id","cmd","getViewManagerConfig","Commands","processRoute","event","_a","nativeEvent","routes","__rest","call","processCameraPosition","point","processVisibleRegion","visibleRegion","processWorldToScreenPointsReceived","screenPoints","processScreenToWorldPointsReceived","worldPoints","resolveImageUri","img","uri","getProps","props","__assign","clusteredMarkers","mark","children","renderMarker","onRouteFound","onCameraPositionReceived","onVisibleRegionReceived","onWorldToScreenPointsReceived","onScreenToWorldPointsReceived","userLocationIcon","undefined","processColorProps","render","createElement","ref","defaultProps","showUserPosition","clusterColor","maxFps","Component","exports"],"sources":["/Users/macbook/Projects/FrontEnd/FrontEnd/node_modules/react-native-yamap/src/components/ClusteredYamap.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Platform,\n  requireNativeComponent,\n  NativeModules,\n  UIManager,\n  findNodeHandle,\n  ViewProps,\n  ImageSourcePropType,\n  NativeSyntheticEvent,\n  ListRenderItemInfo\n} from 'react-native';\n// @ts-ignore\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\nimport CallbacksManager from '../utils/CallbacksManager';\nimport {\n  MapType,\n  Animation,\n  Point,\n  DrivingInfo,\n  MasstransitInfo,\n  RoutesFoundEvent,\n  Vehicles,\n  CameraPosition,\n  VisibleRegion,\n  ScreenPoint,\n  MapLoaded,\n  InitialRegion,\n  YandexLogoPosition,\n  YandexLogoPadding\n} from '../interfaces';\nimport { processColorProps } from '../utils';\nimport { YaMap } from './Yamap';\n\nconst { yamap: NativeYamapModule } = NativeModules;\n\nexport interface ClusteredYaMapProps<T = any> extends ViewProps {\n  userLocationIcon?: ImageSourcePropType;\n  userLocationIconScale?: number;\n  clusteredMarkers: ReadonlyArray<{point: Point, data: T}>\n  renderMarker: (info: {point: Point, data: ListRenderItemInfo<T>}, index: number) => React.ReactElement\n  clusterColor?: string;\n  showUserPosition?: boolean;\n  nightMode?: boolean;\n  mapStyle?: string;\n  mapType?: MapType;\n  onCameraPositionChange?: (event: NativeSyntheticEvent<CameraPosition>) => void;\n  onCameraPositionChangeEnd?: (event: NativeSyntheticEvent<CameraPosition>) => void;\n  onMapPress?: (event: NativeSyntheticEvent<Point>) => void;\n  onMapLongPress?: (event: NativeSyntheticEvent<Point>) => void;\n  onMapLoaded?: (event: NativeSyntheticEvent<MapLoaded>) => void;\n  userLocationAccuracyFillColor?: string;\n  userLocationAccuracyStrokeColor?: string;\n  userLocationAccuracyStrokeWidth?: number;\n  scrollGesturesEnabled?: boolean;\n  zoomGesturesEnabled?: boolean;\n  tiltGesturesEnabled?: boolean;\n  rotateGesturesEnabled?: boolean;\n  fastTapEnabled?: boolean;\n  initialRegion?: InitialRegion;\n  maxFps?: number;\n  followUser?: boolean;\n  logoPosition?: YandexLogoPosition;\n  logoPadding?: YandexLogoPadding;\n}\n\nconst YaMapNativeComponent = requireNativeComponent<Omit<ClusteredYaMapProps, 'clusteredMarkers'> & {clusteredMarkers: Point[]}>('ClusteredYamapView');\n\nexport class ClusteredYamap extends React.Component<ClusteredYaMapProps> {\n  static defaultProps = {\n    showUserPosition: true,\n    clusterColor: 'red',\n    maxFps: 60\n  };\n\n  // @ts-ignore\n  map = React.createRef<YaMapNativeComponent>();\n\n  static ALL_MASSTRANSIT_VEHICLES: Vehicles[] = [\n    'bus',\n    'trolleybus',\n    'tramway',\n    'minibus',\n    'suburban',\n    'underground',\n    'ferry',\n    'cable',\n    'funicular',\n  ];\n\n  public static init(apiKey: string): Promise<void> {\n    return NativeYamapModule.init(apiKey);\n  }\n\n  public static setLocale(locale: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      NativeYamapModule.setLocale(locale, () => resolve(), (err: string) => reject(new Error(err)));\n    });\n  }\n\n  public static getLocale(): Promise<string> {\n    return new Promise((resolve, reject) => {\n      NativeYamapModule.getLocale((locale: string) => resolve(locale), (err: string) => reject(new Error(err)));\n    });\n  }\n\n  public static resetLocale(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      NativeYamapModule.resetLocale(() => resolve(), (err: string) => reject(new Error(err)));\n    });\n  }\n\n  public findRoutes(points: Point[], vehicles: Vehicles[], callback: (event: RoutesFoundEvent<DrivingInfo | MasstransitInfo>) => void) {\n    this._findRoutes(points, vehicles, callback);\n  }\n\n  public findMasstransitRoutes(points: Point[], callback: (event: RoutesFoundEvent<MasstransitInfo>) => void) {\n    this._findRoutes(points, YaMap.ALL_MASSTRANSIT_VEHICLES, callback);\n  }\n\n  public findPedestrianRoutes(points: Point[], callback: (event: RoutesFoundEvent<MasstransitInfo>) => void) {\n    this._findRoutes(points, [], callback);\n  }\n\n  public findDrivingRoutes(points: Point[], callback: (event: RoutesFoundEvent<DrivingInfo>) => void) {\n    this._findRoutes(points, ['car'], callback);\n  }\n\n  public fitAllMarkers() {\n    UIManager.dispatchViewManagerCommand(\n      findNodeHandle(this),\n      this.getCommand('fitAllMarkers'),\n      []\n    );\n  }\n\n  public setTrafficVisible(isVisible: boolean) {\n    UIManager.dispatchViewManagerCommand(\n      findNodeHandle(this),\n      this.getCommand('setTrafficVisible'),\n      [isVisible]\n    );\n  }\n\n  public fitMarkers(points: Point[]) {\n    UIManager.dispatchViewManagerCommand(\n      findNodeHandle(this),\n      this.getCommand('fitMarkers'),\n      [points]\n    );\n  }\n\n  public setCenter(center: { lon: number, lat: number, zoom?: number }, zoom: number = center.zoom || 10, azimuth: number = 0, tilt: number = 0, duration: number = 0, animation: Animation = Animation.SMOOTH) {\n    UIManager.dispatchViewManagerCommand(\n      findNodeHandle(this),\n      this.getCommand('setCenter'),\n      [center, zoom, azimuth, tilt, duration, animation]\n    );\n  }\n\n  public setZoom(zoom: number, duration: number = 0, animation: Animation = Animation.SMOOTH) {\n    UIManager.dispatchViewManagerCommand(\n      findNodeHandle(this),\n      this.getCommand('setZoom'),\n      [zoom, duration, animation]\n    );\n  }\n\n  public getCameraPosition(callback: (position: CameraPosition) => void) {\n    const cbId = CallbacksManager.addCallback(callback);\n    UIManager.dispatchViewManagerCommand(\n      findNodeHandle(this),\n      this.getCommand('getCameraPosition'),\n      [cbId]\n    );\n  }\n\n  public getVisibleRegion(callback: (VisibleRegion: VisibleRegion) => void) {\n    const cbId = CallbacksManager.addCallback(callback);\n    UIManager.dispatchViewManagerCommand(\n      findNodeHandle(this),\n      this.getCommand('getVisibleRegion'),\n      [cbId]\n    );\n  }\n\n  public getScreenPoints(points: Point[], callback: (screenPoint: ScreenPoint) => void) {\n    const cbId = CallbacksManager.addCallback(callback);\n    UIManager.dispatchViewManagerCommand(\n      findNodeHandle(this),\n      this.getCommand('getScreenPoints'),\n      [points, cbId]\n    );\n  }\n\n  public getWorldPoints(points: ScreenPoint[], callback: (point: Point) => void) {\n    const cbId = CallbacksManager.addCallback(callback);\n    UIManager.dispatchViewManagerCommand(\n      findNodeHandle(this),\n      this.getCommand('getWorldPoints'),\n      [points, cbId]\n    );\n  }\n\n  private _findRoutes(points: Point[], vehicles: Vehicles[], callback: ((event: RoutesFoundEvent<DrivingInfo | MasstransitInfo>) => void) | ((event: RoutesFoundEvent<DrivingInfo>) => void) | ((event: RoutesFoundEvent<MasstransitInfo>) => void)) {\n    const cbId = CallbacksManager.addCallback(callback);\n    const args = Platform.OS === 'ios' ? [{ points, vehicles, id: cbId }] : [points, vehicles, cbId];\n\n    UIManager.dispatchViewManagerCommand(\n      findNodeHandle(this),\n      this.getCommand('findRoutes'),\n      args\n    );\n  }\n\n  private getCommand(cmd: string): any {\n    return Platform.OS === 'ios' ? UIManager.getViewManagerConfig('ClusteredYamapView').Commands[cmd] : cmd;\n  }\n\n  private processRoute(event: NativeSyntheticEvent<{ id: string } & RoutesFoundEvent<DrivingInfo | MasstransitInfo>>) {\n    const { id, ...routes } = event.nativeEvent;\n    CallbacksManager.call(id, routes);\n  }\n\n  private processCameraPosition(event: NativeSyntheticEvent<{ id: string } & CameraPosition>) {\n    const { id, ...point } = event.nativeEvent;\n    CallbacksManager.call(id, point);\n  }\n\n  private processVisibleRegion(event: NativeSyntheticEvent<{ id: string } & VisibleRegion>) {\n    const { id, ...visibleRegion } = event.nativeEvent;\n    CallbacksManager.call(id, visibleRegion);\n  }\n\n  private processWorldToScreenPointsReceived(event: NativeSyntheticEvent<{ id: string } & ScreenPoint[]>) {\n    const { id, ...screenPoints } = event.nativeEvent;\n    CallbacksManager.call(id, screenPoints);\n  }\n\n  private processScreenToWorldPointsReceived(event: NativeSyntheticEvent<{ id: string } & Point[]>) {\n    const { id, ...worldPoints } = event.nativeEvent;\n    CallbacksManager.call(id, worldPoints);\n  }\n\n  private resolveImageUri(img: ImageSourcePropType) {\n    return img ? resolveAssetSource(img).uri : '';\n  }\n\n  private getProps() {\n    const props = {\n      ...this.props,\n      clusteredMarkers: this.props.clusteredMarkers.map(mark => mark.point),\n      children: this.props.clusteredMarkers.map(this.props.renderMarker),\n      onRouteFound: this.processRoute,\n      onCameraPositionReceived: this.processCameraPosition,\n      onVisibleRegionReceived: this.processVisibleRegion,\n      onWorldToScreenPointsReceived: this.processWorldToScreenPointsReceived,\n      onScreenToWorldPointsReceived: this.processScreenToWorldPointsReceived,\n      userLocationIcon: this.props.userLocationIcon ? this.resolveImageUri(this.props.userLocationIcon) : undefined\n    };\n    processColorProps(props, 'clusterColor' as keyof ClusteredYaMapProps);\n    processColorProps(props, 'userLocationAccuracyFillColor' as keyof ClusteredYaMapProps);\n    processColorProps(props, 'userLocationAccuracyStrokeColor' as keyof ClusteredYaMapProps);\n\n    return props;\n  }\n\n  render() {\n    return (\n      <YaMapNativeComponent\n        {...this.getProps()}\n        ref={this.map}\n      />\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}