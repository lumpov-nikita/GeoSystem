{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Animation = void 0;\nvar Animation;\n(function (Animation) {\n  Animation[Animation[\"SMOOTH\"] = 0] = \"SMOOTH\";\n  Animation[Animation[\"LINEAR\"] = 1] = \"LINEAR\";\n})(Animation = exports.Animation || (exports.Animation = {}));","map":{"version":3,"names":["Animation","exports"],"sources":["/Users/macbook/Projects/FrontEnd/FrontEnd/node_modules/react-native-yamap/src/interfaces.ts"],"sourcesContent":["export interface Point {\n  lat: number;\n  lon: number;\n}\n\nexport interface BoundingBox {\n  southWest: Point;\n  northEast: Point;\n}\n\nexport interface ScreenPoint {\n  x: number;\n  y: number;\n}\n\nexport interface MapLoaded {\n  renderObjectCount: number;\n  curZoomModelsLoaded: number;\n  curZoomPlacemarksLoaded: number;\n  curZoomLabelsLoaded: number;\n  curZoomGeometryLoaded: number;\n  tileMemoryUsage: number;\n  delayedGeometryLoaded: number;\n  fullyAppeared: number;\n  fullyLoaded: number;\n}\n\nexport interface InitialRegion {\n  lat: number;\n  lon: number;\n  zoom?: number;\n  azimuth?: number;\n  tilt?: number;\n}\n\nexport type MasstransitVehicles = 'bus' | 'trolleybus' | 'tramway' | 'minibus' | 'suburban' | 'underground' | 'ferry' | 'cable' | 'funicular';\n\nexport type Vehicles = MasstransitVehicles | 'walk' | 'car';\n\nexport type MapType = 'none' | 'raster' | 'vector';\n\nexport interface DrivingInfo {\n  time: string;\n  timeWithTraffic: string;\n  distance: number;\n}\n\nexport interface MasstransitInfo {\n  time: string;\n  transferCount: number;\n  walkingDistance: number;\n}\n\nexport interface RouteInfo<T extends (DrivingInfo | MasstransitInfo)> {\n  id: string;\n  sections: {\n    points: Point[];\n    sectionInfo: T;\n    routeInfo: T;\n    routeIndex: number;\n    stops: any[];\n    type: string;\n    transports?: any;\n    sectionColor?: string;\n  }[];\n}\n\nexport interface RoutesFoundEvent<T extends (DrivingInfo | MasstransitInfo)> {\n  nativeEvent: {\n    status: 'success' | 'error';\n    id: string;\n    routes: RouteInfo<T>[];\n  };\n}\n\nexport interface CameraPosition {\n  zoom: number;\n  tilt: number;\n  azimuth: number;\n  point: Point;\n  finished: boolean;\n}\n\nexport type VisibleRegion = {\n  bottomLeft: Point;\n  bottomRight: Point;\n  topLeft: Point;\n  topRight: Point;\n}\n\nexport enum Animation {\n  SMOOTH,\n  LINEAR\n}\n\nexport type YandexLogoPosition = {\n  horizontal?: 'left' | 'center' | 'right';\n  vertical?: 'top' | 'bottom';\n}\n\nexport type YandexLogoPadding = {\n  horizontal?: number;\n  vertical?: number;\n}\n"],"mappings":";;;;;;AA0FA,IAAYA,SAGX;AAHD,WAAYA,SAAS;EACnBA,SAAA,CAAAA,SAAA,0BAAM;EACNA,SAAA,CAAAA,SAAA,0BAAM;AACR,CAAC,EAHWA,SAAS,GAATC,OAAA,CAAAD,SAAS,KAATC,OAAA,CAAAD,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}