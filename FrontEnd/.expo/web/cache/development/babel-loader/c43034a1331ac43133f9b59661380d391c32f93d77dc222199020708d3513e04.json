{"ast":null,"code":"import React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, TextInput } from 'react-native-paper';\nimport { registerStyle } from \"./regicter.style\";\nimport { theme } from \"../../../App.style\";\nimport { HeaderComponent } from \"../../components/header/header.component\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var RegisterScreen = function RegisterScreen() {\n  return _jsx(SafeAreaView, {\n    children: _jsxs(ScrollView, {\n      children: [_jsx(HeaderComponent, {\n        title: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }), _jsxs(View, {\n        style: registerStyle.content,\n        children: [_jsx(TextInput, {\n          label: \"\\u0418\\u043C\\u044F\"\n        }), _jsx(TextInput, {\n          label: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\"\n        }), _jsx(TextInput, {\n          label: \"\\u041E\\u0442\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n        }), _jsx(TextInput, {\n          label: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\",\n          keyboardType: \"phone-pad\"\n        }), _jsx(TextInput, {\n          label: \"Email\",\n          keyboardType: \"email-address\"\n        }), _jsx(TextInput, {\n          label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          secureTextEntry: true,\n          right: _jsx(TextInput.Icon, {\n            icon: \"eye-off-outline\",\n            color: registerStyle.icon.color\n          })\n        }), _jsx(TextInput, {\n          label: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044F\",\n          secureTextEntry: true,\n          right: _jsx(TextInput.Icon, {\n            icon: \"eye-off-outline\",\n            color: registerStyle.icon.color\n          })\n        }), _jsx(Button, {\n          mode: \"contained\",\n          style: theme.cardButton,\n          children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n        })]\n      })]\n    })\n  });\n};","map":{"version":3,"names":["React","SafeAreaView","ScrollView","View","Button","TextInput","registerStyle","theme","HeaderComponent","jsx","_jsx","jsxs","_jsxs","RegisterScreen","children","title","style","content","label","keyboardType","secureTextEntry","right","Icon","icon","color","mode","cardButton"],"sources":["/Users/macbook/Projects/FrontEnd/FrontEnd/app/screens/register/register.screen.tsx"],"sourcesContent":["import React from 'react';\nimport { SafeAreaView, ScrollView, View } from 'react-native';\nimport { Appbar, Button, TextInput } from 'react-native-paper';\nimport { registerStyle } from './regicter.style';\nimport { theme } from '../../../App.style';\nimport { HeaderComponent } from '../../components/header/header.component';\n\nexport const RegisterScreen = () => {\n    return (\n        <SafeAreaView>\n            <ScrollView>\n                <HeaderComponent title='Регистрация' />\n                <View style={registerStyle.content}>\n                    <TextInput label=\"Имя\" />\n                    <TextInput label=\"Фамилия\" />\n                    <TextInput label=\"Отчество\" />\n                    <TextInput label=\"Телефон\" keyboardType='phone-pad' />\n                    <TextInput label=\"Email\" keyboardType='email-address' />\n                    <TextInput label=\"Пароль\" secureTextEntry={true} right={<TextInput.Icon icon=\"eye-off-outline\" color={registerStyle.icon.color} />} />\n                    <TextInput label=\"Подтверждение пароля\" secureTextEntry={true} right={<TextInput.Icon icon=\"eye-off-outline\" color={registerStyle.icon.color} />} />\n                    <Button mode='contained' style={theme.cardButton}>Зарегистрироваться</Button>\n                </View>\n            </ScrollView>\n        </SafeAreaView>\n    );\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAE1B,SAAiBC,MAAM,EAAEC,SAAS,QAAQ,oBAAoB;AAC9D,SAASC,aAAa;AACtB,SAASC,KAAK;AACd,SAASC,eAAe;AAAmD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE3E,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAChC,OACIH,IAAA,CAACT,YAAY;IAAAa,QAAA,EACTF,KAAA,CAACV,UAAU;MAAAY,QAAA,GACPJ,IAAA,CAACF,eAAe;QAACO,KAAK,EAAC;MAAa,CAAE,CAAC,EACvCH,KAAA,CAACT,IAAI;QAACa,KAAK,EAAEV,aAAa,CAACW,OAAQ;QAAAH,QAAA,GAC/BJ,IAAA,CAACL,SAAS;UAACa,KAAK,EAAC;QAAK,CAAE,CAAC,EACzBR,IAAA,CAACL,SAAS;UAACa,KAAK,EAAC;QAAS,CAAE,CAAC,EAC7BR,IAAA,CAACL,SAAS;UAACa,KAAK,EAAC;QAAU,CAAE,CAAC,EAC9BR,IAAA,CAACL,SAAS;UAACa,KAAK,EAAC,4CAAS;UAACC,YAAY,EAAC;QAAW,CAAE,CAAC,EACtDT,IAAA,CAACL,SAAS;UAACa,KAAK,EAAC,OAAO;UAACC,YAAY,EAAC;QAAe,CAAE,CAAC,EACxDT,IAAA,CAACL,SAAS;UAACa,KAAK,EAAC,sCAAQ;UAACE,eAAe,EAAE,IAAK;UAACC,KAAK,EAAEX,IAAA,CAACL,SAAS,CAACiB,IAAI;YAACC,IAAI,EAAC,iBAAiB;YAACC,KAAK,EAAElB,aAAa,CAACiB,IAAI,CAACC;UAAM,CAAE;QAAE,CAAE,CAAC,EACtId,IAAA,CAACL,SAAS;UAACa,KAAK,EAAC,qHAAsB;UAACE,eAAe,EAAE,IAAK;UAACC,KAAK,EAAEX,IAAA,CAACL,SAAS,CAACiB,IAAI;YAACC,IAAI,EAAC,iBAAiB;YAACC,KAAK,EAAElB,aAAa,CAACiB,IAAI,CAACC;UAAM,CAAE;QAAE,CAAE,CAAC,EACpJd,IAAA,CAACN,MAAM;UAACqB,IAAI,EAAC,WAAW;UAACT,KAAK,EAAET,KAAK,CAACmB,UAAW;UAAAZ,QAAA,EAAC;QAAkB,CAAQ,CAAC;MAAA,CAC3E,CAAC;IAAA,CACC;EAAC,CACH,CAAC;AAEvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}